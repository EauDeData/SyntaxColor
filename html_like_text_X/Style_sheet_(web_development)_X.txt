

Style sheet (web development) - Wikipedia
document.documentElement.className="client-js";RLCONF={"wgBreakFrames":!1,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRequestId":"XflSTwpAAEIAAFCrQV8AAAAA","wgCSPNonce":!1,"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":!1,"wgNamespaceNumber":0,"wgPageName":"Style_sheet_(web_development)","wgTitle":"Style sheet (web development)","wgCurRevisionId":891302038,"wgRevisionId":891302038,"wgArticleId":996933,"wgIsArticle":!0,"wgIsRedirect":!1,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Articles with short description","Articles needing additional references from March 2014","All articles needing additional references","Web development"],"wgPageContentLanguage":"en"
,"wgPageContentModel":"wikitext","wgRelevantPageName":"Style_sheet_(web_development)","wgRelevantArticleId":996933,"wgIsProbablyEditable":!0,"wgRelevantPageIsProbablyEditable":!0,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgMediaViewerOnClick":!0,"wgMediaViewerEnabledByDefault":!0,"wgPopupsReferencePreviews":!1,"wgPopupsConflictsWithNavPopupGadget":!1,"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en"},"wgMFDisplayWikibaseDescriptions":{"search":!0,"nearby":!0,"watchlist":!0,"tagline":!1},"wgWMESchemaEditAttemptStepOversample":!1,"wgULSCurrentAutonym":"English","wgNoticeProject":"wikipedia","wgWikibaseItemId":"Q4119753","wgCentralAuthMobileDomain":!1,"wgEditSubmitButtonLabelPublish":!0};RLSTATE={"ext.globalCssJs.user.styles":"ready","site.styles":"ready","noscript":"ready","user.styles":"ready","ext.globalCssJs.user":"ready","user":"ready","user.options":"ready","user.tokens":"loading","ext.cite.styles":
"ready","mediawiki.legacy.shared":"ready","mediawiki.legacy.commonPrint":"ready","jquery.makeCollapsible.styles":"ready","mediawiki.toc.styles":"ready","wikibase.client.init":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.uls.interlanguage":"ready","ext.wikimediaBadges":"ready","mediawiki.skinning.interface":"ready","skins.vector.styles":"ready"};RLPAGEMODULES=["ext.cite.ux-enhancements","site","mediawiki.page.startup","mediawiki.page.ready","jquery.makeCollapsible","mediawiki.toc","mediawiki.searchSuggest","ext.gadget.teahouse","ext.gadget.ReferenceTooltips","ext.gadget.watchlist-notice","ext.gadget.DRN-wizard","ext.gadget.charinsert","ext.gadget.refToolbar","ext.gadget.extra-toolbar-buttons","ext.gadget.switcher","ext.centralauth.centralautologin","mmv.head","mmv.bootstrap.autostart","ext.popups","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","ext.eventLogging","ext.wikimediaEvents","ext.navigationTiming","ext.uls.compactlinks",
"ext.uls.interface","ext.cx.eventlogging.campaigns","ext.quicksurveys.init","ext.centralNotice.geoIP","ext.centralNotice.startUp","skins.vector.js"];
(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.tokens@tffin",function($,jQuery,require,module){/*@nomin*/mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});
});});

























	
	
	


	Style sheet (web development)
	
	
		From Wikipedia, the free encyclopedia
		
		
		
		
		
		Jump to navigation
		Jump to search
		Form of separation of presentation and content for web design
This article needs additional citations for verification. Please help improve this article by adding citations to reliable sources. Unsourced material may be challenged and removed.Find sources: "Style sheet" web development – news · newspapers · books · scholar · JSTOR  (March 2014) (Learn how and when to remove this template message)
See also: Cascading Style Sheets
Cascading Style Sheets
Style sheet
CSS Zen Garden
The Zen of CSS Design

Concepts
box model
image replacement
flexbox
grid

Philosophies
Tableless
Responsive
"Holy grail"

Tools
Sass
Less
Stylus
CSSTidy

Comparisons
CSS support
Stylesheet languages

 Cascading Style Sheetsvte
HTML
Dynamic HTML
HTML5
audio
canvas
video
XHTML
Basic
Mobile Profile
C-HTML
HTML element
span and div
HTML attribute
HTML frame
HTML editor
Character encodings
Unicode
Language code
Document Object Model
Browser Object Model
Style sheets
CSS
Font family
Web colors
HTML scripting
JavaScript
WebGL
WebCL
W3C
Validator
WHATWG
Quirks mode
Web storage
Rendering engine

Comparisons
Document markup languages
HTML support
XHTML
1.1

A web style sheet is a form of separation of presentation and content for web design in which the markup (i.e., HTML or XHTML) of a webpage contains the page's semantic content and structure, but does not define its visual layout (style). Instead, the style is defined in an external style sheet file using a style sheet language such as CSS or XSLT. This design approach is identified as a "separation" because it largely supersedes the antecedent methodology in which a page's markup defined both style and structure.
The philosophy underlying this methodology is a specific case of separation of concerns.

Contents

1 Benefits

1.1 Speed
1.2 Maintainability
1.3 Accessibility
1.4 Customization
1.5 Consistency
1.6 Portability


2 Practical disadvantages today

2.1 Narrow adoption without the parsing and generation tools


3 See also
4 References
5 External links



Benefits[edit]
Separation of style and content has advantages,[1][2] but has only become practical after improvements in popular web browsers' CSS implementations.

Speed[edit]
Overall, users experience of a site utilising style sheets will generally be quicker than sites that don’t use the technology.  ‘Overall’ as the first page will probably load more slowly – because the style sheet AND the content will need to be transferred.  Subsequent pages will load faster because no style information will need to be downloaded – the CSS file will already be in the browser’s cache.

Maintainability[edit]
Holding all the presentation styles in one file can reduce the maintenance time and reduces the chance of error, thereby improving presentation consistency. For example, the font color associated with a type of text element may be specified — and therefore easily modified — throughout an entire website simply by changing one short string of characters in a single file. The alternate approach, using styles embedded in each individual page, would require a cumbersome, time consuming, and error-prone edit of every file.

Accessibility[edit]
Sites that use CSS with either XHTML or HTML are easier to tweak so that they appear similar in different browsers (Internet Explorer, Mozilla Firefox, Opera, Safari, etc.).
Sites using CSS "degrade gracefully" in browsers unable to display graphical content, such as Lynx, or those so very old that they cannot use CSS.  Browsers ignore CSS that they do not understand, such as CSS 3 statements. This enables a wide variety of user agents to be able to access the content of a site even if they cannot render the style sheet or are not designed with graphical capability in mind. For example, a browser using a refreshable braille display for output could disregard layout information entirely, and the user would still have access to all page content.

Customization[edit]
If a page's layout information is stored externally, a user can decide to disable the layout information entirely, leaving the site's bare content still in a readable form. Site authors may also offer multiple style sheets, which can be used to completely change the appearance of the site without altering any of its content.
Most modern web browsers also allow the user to define their own style sheet, which can include rules that override the author's layout rules. This allows users, for example, to bold every hyperlink on every page they visit.

Consistency[edit]
Because the semantic file contains only the meanings an author intends to convey, the styling of the various elements of the document's content is very consistent. For example, headings, emphasized text, lists and mathematical expressions all receive consistently applied style properties from the external style sheet. Authors need not concern themselves with the style properties at the time of composition. These presentational details can be deferred until the moment of presentation.

Portability[edit]
The deferment of presentational details until the time of presentation means that a document can be easily re-purposed for an entirely different presentation medium with merely the application of a new style sheet already prepared for the new medium and consistent with elemental or structural vocabulary of the semantic document. A carefully authored document for a web page can easily be printed to a hard-bound volume complete with headers and footers, page numbers and a generated table of contents simply by applying a new style sheet.

Practical disadvantages today[edit]
Currently specifications (for example, XHTML, XSL, CSS) and software tools implementing these specification are only reaching the early stages of maturity. So there are some practical issues facing authors who seek to embrace this method of separating content and style.

Narrow adoption without the parsing and generation tools[edit]
While the style specifications are quite mature and still maturing, the software tools have been slow to adapt. Most of the major web development tools still embrace a mixed presentation-content model. So authors and designers looking for GUI based tools for their work find it difficult to follow the semantic web method. In addition to GUI tools, shared repositories for generalized style sheets would probably aid adoption of these methods.

See also[edit]
Separation of concerns
References[edit]


^ Why use CSS? - Web developer guide | MDN

^ Why Use CSS in Website Design


External links[edit]
CSS Zen Garden: A site which challenges designers to create new page layouts without touching the XHTML source. Includes dozens of layouts. CSS source can be viewed for every layout.
vteStyle sheet languagesModes
Desktop publishing
Web development
User interfaces
Standard
Cascading (CSS)
DSSSL
Extensible (XSL)
Preprocessor
JavaScript (JSSS)
FOSI
Qt
Sass
Less
Stylus
SMIL Timesheets
PostCSS

List
Comparison






		
		Retrieved from "https://en.wikipedia.org/w/index.php?title=Style_sheet_(web_development)&oldid=891302038"
		
		Categories: Web developmentHidden categories: Articles with short descriptionArticles needing additional references from March 2014All articles needing additional references
		
		
	


	



		
			Navigation menu
			
						
			Personal tools
			
				Not logged inTalkContributionsCreate accountLog in			
		
						
					

	Namespaces
	
		ArticleTalk
	

		
						
			
				Variants
			
			
							
		
						
				
					

	Views
	
		ReadEditView history
	

		
			
			More
			
							
		
		

	
		Search
	
	
		
			
			
			
			
			
		
	

				
			
			
				
						
			Navigation
			
								
					Main pageContentsFeatured contentCurrent eventsRandom articleDonate to WikipediaWikipedia store				
							
		
			
			Interaction
			
								
					HelpAbout WikipediaCommunity portalRecent changesContact page				
							
		
			
			Tools
			
								
					What links hereRelated changesUpload fileSpecial pagesPermanent linkPage informationWikidata itemCite this page				
							
		
			
			Print/export
			
								
					Create a bookDownload as PDFPrintable version				
							
		
			
			Languages
			
								
					العربيةCatalàEspañolفارسیFrançaisNederlands日本語Српски / srpski中文				
				Edit links			
		
				
		
				
						
								 This page was last edited on 7 April 2019, at 01:43 (UTC).
								Text is available under the Creative Commons Attribution-ShareAlike License;
additional terms may apply.  By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.
							
						
								Privacy policy
								About Wikipedia
								Disclaimers
								Contact Wikipedia
								Developers
								Statistics
								Cookie statement
								Mobile view
							
										
										
											
										
											
									
						
		
		

(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.160","walltime":"0.248","ppvisitednodes":{"value":431,"limit":1000000},"ppgeneratednodes":{"value":0,"limit":1500000},"postexpandincludesize":{"value":30552,"limit":2097152},"templateargumentsize":{"value":479,"limit":2097152},"expansiondepth":{"value":8,"limit":40},"expensivefunctioncount":{"value":1,"limit":500},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":955,"limit":5000000},"entityaccesscount":{"value":0,"limit":400},"timingprofile":["100.00%  199.630      1 -total"," 39.43%   78.713      1 Template:Refimprove"," 34.01%   67.898      1 Template:Ambox"," 24.81%   49.520      1 Template:Short_description"," 16.72%   33.377      1 Template:Pagetype"," 16.69%   33.317      1 Template:Find_sources_mainspace"," 15.03%   29.998      1 Template:CSS"," 14.09%   28.136      2 Template:Sidebar","  7.14%   14.255      1 Template:Stylesheet_languages","  6.55%   13.082      1 Template:See_also"]},"scribunto":{"limitreport-timeusage":{"value":"0.064","limit":"10.000"},"limitreport-memusage":{"value":2602903,"limit":52428800}},"cachereport":{"origin":"mw1266","timestamp":"20191217213621","ttl":2592000,"transientcontent":false}}});});
{"@context":"https:\/\/schema.org","@type":"Article","name":"Style sheet (web development)","url":"https:\/\/en.wikipedia.org\/wiki\/Style_sheet_(web_development)","sameAs":"http:\/\/www.wikidata.org\/entity\/Q4119753","mainEntity":"http:\/\/www.wikidata.org\/entity\/Q4119753","author":{"@type":"Organization","name":"Contributors to Wikimedia projects"},"publisher":{"@type":"Organization","name":"Wikimedia Foundation, Inc.","logo":{"@type":"ImageObject","url":"https:\/\/www.wikimedia.org\/static\/images\/wmf-hor-googpub.png"}},"datePublished":"2004-09-18T21:47:44Z","dateModified":"2019-04-07T01:43:54Z","headline":"form of separation of presentation and content for web design"}
(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgBackendResponseTime":104,"wgHostname":"mw1271"});});


